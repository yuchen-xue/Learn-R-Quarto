[
  {
    "objectID": "content/quarto-topics/code-block.html",
    "href": "content/quarto-topics/code-block.html",
    "title": "Introduction to Code Blocks",
    "section": "",
    "text": "Code execution options can be used when you want to, e.g., regulate the code output, hide the code piece, and so on. Read the official guide about execution options for more detail."
  },
  {
    "objectID": "content/quarto-topics/code-block.html#code-execution-options",
    "href": "content/quarto-topics/code-block.html#code-execution-options",
    "title": "Introduction to Code Blocks",
    "section": "",
    "text": "Code execution options can be used when you want to, e.g., regulate the code output, hide the code piece, and so on. Read the official guide about execution options for more detail."
  },
  {
    "objectID": "content/quarto-topics/code-block.html#interactive-code-annotations",
    "href": "content/quarto-topics/code-block.html#interactive-code-annotations",
    "title": "Introduction to Code Blocks",
    "section": "Interactive Code Annotations",
    "text": "Interactive Code Annotations\nInteractive code annotation is a combination of inline comment and bullet points. The display of code annotation can be controled by the variable code-annotations, which contains the following options:\n\nbelow (default)\nhover\nselect\nnone\n\nBelow is an example of using code annotation from the official guide about code annotation.\n\npacman::p_load(palmerpenguins)\n1penguins |&gt;\n2    mutate(\n        bill_ratio = bill_depth_mm / bill_length_mm,\n        bill_area  = bill_depth_mm * bill_length_mm\n    )\n\n\n1\n\nTake penguins, and then,\n\n2\n\nadd new columns for the bill ratio and bill area.\n\n\n\n\n# A tibble: 344 × 10\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 4 more variables: sex &lt;fct&gt;, year &lt;int&gt;, bill_ratio &lt;dbl&gt;, bill_area &lt;dbl&gt;"
  },
  {
    "objectID": "content/experiment-designs/experiment-design-basic.html",
    "href": "content/experiment-designs/experiment-design-basic.html",
    "title": "Experiment Design",
    "section": "",
    "text": "Randomization\n\nRandomize as much as possible\n\nReplication\n\nRepeat the experiment on each treatment\n\nBlock\n\nwhen necessary"
  },
  {
    "objectID": "content/experiment-designs/experiment-design-basic.html#the-principles-of-experiment-design",
    "href": "content/experiment-designs/experiment-design-basic.html#the-principles-of-experiment-design",
    "title": "Experiment Design",
    "section": "",
    "text": "Randomization\n\nRandomize as much as possible\n\nReplication\n\nRepeat the experiment on each treatment\n\nBlock\n\nwhen necessary"
  },
  {
    "objectID": "content/experiment-designs/experiment-design-basic.html#crd-rcbd-explained-using-petri-dishes-in-a-fridge",
    "href": "content/experiment-designs/experiment-design-basic.html#crd-rcbd-explained-using-petri-dishes-in-a-fridge",
    "title": "Experiment Design",
    "section": "CRD & RCBD Explained using Petri Dishes in a Fridge",
    "text": "CRD & RCBD Explained using Petri Dishes in a Fridge\nSuppose we have a fridge that fits 9 Petri dishes. The fridge is not functioning well and its left part is hotter than its right part (we suppose the temperature difference from left to right is linear). We have three different treatments for a particular bacterium. We need to count how many bacteria grow under each treatment.\n\n\n\nCRD v.s. RCBD explained using Petri dishes in a fridge (screenshot from the workshop)\n\n\n\nCompletely Randomized Design (CRD)\n\nIn a Completely Randomized Design (CRD), each experimental unit is assigned to a treatment completely at random, without any restrictions or grouping. This design is particularly useful when the experimental units are homogeneous or when the influence of external variables is minimal.\n\nThe formula of a linear model following a CRD design pattern is:\n\\[\ny_{ij} = Int + trt_i + e_{ij}\n\\]\nExplanation of this formula:\n\n\\(y_{ij}\\): The prediction of treatment \\(i\\) on block \\(j\\)\n\\(Int\\): the intercept\n\\(tri_i\\): the effect of treatment \\(i\\)\n\\(e_{ij}\\): error term\n\nIn our case (sub-figure on the right), we randomly put each Petri dish into each slot in the fridge, without any grouping. As a result, more Petri dishes with treatment A are placed near the left side. This may cause in biased prediction.\n\n\nRandomized Complete Block Design (RCBD)\n\nIn a Randomized Complete Block Design (RCBD), treatments are randomly assigned within blocks, where each block is a grouping of experimental units that are similar in some way that is important to the experiment. This design is particularly effective in experiments where variability among the experimental units is expected, but can be grouped into relatively homogeneous blocks.\n\nThe formula of a linear model following a RCBD design pattern is:\n\\[\ny_{ij} = Int + trt_i + block_j + e_{ij}\n\\]\nCompared to the formula of CRD, here we have an additional block effect \\(block_j\\).\nIn our case (sub-figure on the right), we divide the slots in the fridge into three regions from left to right. Within each region, the distribution of Petri dishes are random. By doing so we can avoid biased result."
  },
  {
    "objectID": "content/experiment-designs/experiment-design-basic.html#rcbd-blocks-are-not-necessarily-uniform",
    "href": "content/experiment-designs/experiment-design-basic.html#rcbd-blocks-are-not-necessarily-uniform",
    "title": "Experiment Design",
    "section": "RCBD Blocks are not Necessarily Uniform",
    "text": "RCBD Blocks are not Necessarily Uniform\nRCBD blocks do not have to be the same size or shape. In the following example, the researcher needs to evaluate the performance of football players during a football match. The occurence of the ball is not uniform and there is the following pattern:\n\nThe ball is most likely to appear in the middle of the pitch (B2).\nThe second most likely place for the ball to appear is near the penalty area (B1).\nThe ball is least likely to appear anywhere else (B3).\n\nThus the RCBD design on the football pitch is shown as follows:\n\n\n\nRCBD design on a football pitch (screenshot from the workshop)"
  },
  {
    "objectID": "content/experiment-designs/experiment-design-basic.html#two-way-rcbd",
    "href": "content/experiment-designs/experiment-design-basic.html#two-way-rcbd",
    "title": "Experiment Design",
    "section": "Two-Way RCBD",
    "text": "Two-Way RCBD\nTake this experiment as an example. Suppose we have two treatments:\n\n2 different genetics (i.e. two different crop species, namely A and B), and\n2 different nitrogens (blue and red).\n\nWe need to find out the best conbination of the genetic and nitrogen that can produce the best yield. By following a Two-Way RCBD design, we can summarize all the possible 5 scenarios as the following illustration:\n\n\n\ntwo-way-RCBD-scenarios\n\n\nWhen we test this design using one-way ANOVA, it only considers the two scenarios that is surrounded by orange line. In order to consider all the possible scenarios, a two-way ANOVA is necessary."
  },
  {
    "objectID": "content/experiment-designs/experiment-design-basic.html#further-information-about-design-patters",
    "href": "content/experiment-designs/experiment-design-basic.html#further-information-about-design-patters",
    "title": "Experiment Design",
    "section": "Further Information about Design Patters",
    "text": "Further Information about Design Patters\n\nDesign Patterns\nAnalysis of factorial experiments\nRandomized Complete Block Design Tutorial"
  },
  {
    "objectID": "content/r-topics/read-export-data.html",
    "href": "content/r-topics/read-export-data.html",
    "title": "Read & Export Data",
    "section": "",
    "text": "readr::read_csv() Is a part of the tidyverse universe, thus the output is a tibble.\n\n\n\n\n\n\nImportant\n\n\n\nDon’t be confused with the native read.csv() function.\n\n\n\npacman::p_load(readr)\npath &lt;- \"../data/Clewer&Scarisbrick2001.csv\"\ndat &lt;- read_csv(path) # use path from above\n\nRows: 12 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): block, cultivar\ndbl (3): yield, row, col\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndat\n\n# A tibble: 12 × 5\n   block cultivar yield   row   col\n   &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 B1    C1         7.4     2     1\n 2 B1    C2         9.8     3     1\n 3 B1    C3         7.3     1     1\n 4 B1    C4         9.5     4     1\n 5 B2    C1         6.5     1     2\n 6 B2    C2         6.8     4     2\n 7 B2    C3         6.1     3     2\n 8 B2    C4         8       2     2\n 9 B3    C1         5.6     2     3\n10 B3    C2         6.2     1     3\n11 B3    C3         6.4     3     3\n12 B3    C4         7.4     4     3"
  },
  {
    "objectID": "content/r-topics/read-export-data.html#read-a-csv-file-using-the-tidyverse-packages",
    "href": "content/r-topics/read-export-data.html#read-a-csv-file-using-the-tidyverse-packages",
    "title": "Read & Export Data",
    "section": "",
    "text": "readr::read_csv() Is a part of the tidyverse universe, thus the output is a tibble.\n\n\n\n\n\n\nImportant\n\n\n\nDon’t be confused with the native read.csv() function.\n\n\n\npacman::p_load(readr)\npath &lt;- \"../data/Clewer&Scarisbrick2001.csv\"\ndat &lt;- read_csv(path) # use path from above\n\nRows: 12 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): block, cultivar\ndbl (3): yield, row, col\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndat\n\n# A tibble: 12 × 5\n   block cultivar yield   row   col\n   &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 B1    C1         7.4     2     1\n 2 B1    C2         9.8     3     1\n 3 B1    C3         7.3     1     1\n 4 B1    C4         9.5     4     1\n 5 B2    C1         6.5     1     2\n 6 B2    C2         6.8     4     2\n 7 B2    C3         6.1     3     2\n 8 B2    C4         8       2     2\n 9 B3    C1         5.6     2     3\n10 B3    C2         6.2     1     3\n11 B3    C3         6.4     3     3\n12 B3    C4         7.4     4     3"
  },
  {
    "objectID": "content/r-topics/read-export-data.html#read-a-excel-.xlsx-files",
    "href": "content/r-topics/read-export-data.html#read-a-excel-.xlsx-files",
    "title": "Read & Export Data",
    "section": "Read a Excel .xlsx Files",
    "text": "Read a Excel .xlsx Files\n\npacman::p_load(readxl)\nxlsx_path &lt;- \"../data/vision_fixed.xlsx\"\nxlsx_dat &lt;- read_excel(xlsx_path)\nxlsx_dat\n\n# A tibble: 29 × 9\n   Person   Ages Gender `Civil state` Height Profession Vision Distance PercDist\n   &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Andrés     25 M      S                180 Student        10      1.5     15  \n 2 Anja       29 F      S                168 Professio…     10      4.5     45  \n 3 Armando    31 M      S                169 Professio…      9      4.5     50  \n 4 Carlos     25 M      M                185 Professio…      8      6       75  \n 5 Cristi…    23 F      &lt;NA&gt;             170 Student        10      3       30  \n 6 Delfa      39 F      M                158 Professio…      6      4.5     75  \n 7 Eduardo    28 M      S                166 Professio…      8      4.5     56.2\n 8 Enrique    NA &lt;NA&gt;   &lt;NA&gt;              NA Professio…     NA      6       NA  \n 9 Fanny      25 F      M                164 Student         9      3       33.3\n10 Franci…    46 M      M                168 Professio…      8      4.5     56.2\n# ℹ 19 more rows"
  },
  {
    "objectID": "content/r-topics/read-export-data.html#write-a-csv-file-using-the-tidyverse-packages",
    "href": "content/r-topics/read-export-data.html#write-a-csv-file-using-the-tidyverse-packages",
    "title": "Read & Export Data",
    "section": "Write a csv file using the tidyverse packages",
    "text": "Write a csv file using the tidyverse packages\nLearn more from this doc."
  },
  {
    "objectID": "content/r-topics/model-testing.html",
    "href": "content/r-topics/model-testing.html",
    "title": "Model Testing",
    "section": "",
    "text": "This reading note envolves the following topics\n\n\n\n\nMultiplicity Adjustments\nModel Diagnostics"
  },
  {
    "objectID": "content/r-topics/model-testing.html#brief-introduction-to-testing-errors",
    "href": "content/r-topics/model-testing.html#brief-introduction-to-testing-errors",
    "title": "Model Testing",
    "section": "Brief Introduction to Testing Errors",
    "text": "Brief Introduction to Testing Errors\nSuppose you want to find out if 3 treatments has effects on the yield of the crop. You build a linear model and use ANOVA to test if this model has statistic significance. But be careful – you should also know about potential error.\nThere’re two types of errors: Type I and Type II.\n\nType I Error\n\n\n\n\n\n\nNote\n\n\n\nWhen a Type I error (false positive, denoted as \\(\\alpha\\)) occurs, the null hypothesis is correct but it’s falsely rejected (since you thought the null hypothesis shall be false).\n\n\nAfter the experiment you confidently claim that different treatment have effect on the yield. But in reality, no matter which of the 3 treatments is chosen, there’s no effect on the yield of the crop.\n\n\nType II Error\n\n\n\n\n\n\nNote\n\n\n\nWhen a Type I error (false negative, denoted as \\(\\beta\\)) occurs, the null hypothesis isn’t correct but it isn’t rejected (since you thought the null hypothesis shall be true). It’s a better error.\n\n\nAfter the experiment you feel disappointed since you thought the null hypothesis is true (i.e. there’s no difference no matter which treatment is chosen). But in reality, there do exists different effect on the yield of the crop depends on which treatment is chosen."
  },
  {
    "objectID": "content/r-topics/model-testing.html#multiple-comparison-problem",
    "href": "content/r-topics/model-testing.html#multiple-comparison-problem",
    "title": "Model Testing",
    "section": "Multiple Comparison Problem",
    "text": "Multiple Comparison Problem\n\nWhen a test is said to be “performed at the 5% level,” it means that the Type I error rate (\\(\\alpha\\)) is controlled at 5%, accepting a 5% risk of a false positive. (source)\n\nThis is fine for one single experiment. But what about when you need to conduct numerous times of experiments (i.e. multiple t-test)? Without adjustment on the testing method, the \\(\\alpha\\) value will rise drastically as the number of experiments increses. E.g. when conduting the experiments 5 times, \\(\\alpha = 1-(1-0.05)^5 = 0.23\\). This is called the “Alpha Inflation”.\nTo address this issue, there are several methods that try to constrain \\(\\alpha\\) within the \\(0.05\\) range. For exmaple, Tukey’s HSD test.\nNote that usually multiple t-test can find a smaller \\(p\\)-value compared to Tukey’s HSD test.\nSo which one should I use? It depends on your goal. Don’t run both tests and deliberately choose the result you prefer.\n\n\n\n\n\n\nSome useful resources about the multiple comparison problem\n\n\n\n\nMultiple comparisons problem from Wikipedia\nThe Problem of Multiple Comparisons from Youtube"
  },
  {
    "objectID": "content/r-topics/model-testing.html#model-diagnostics-should-i-continue-testing-my-linear-model",
    "href": "content/r-topics/model-testing.html#model-diagnostics-should-i-continue-testing-my-linear-model",
    "title": "Model Testing",
    "section": "Model Diagnostics – Should I continue testing my Linear Model?",
    "text": "Model Diagnostics – Should I continue testing my Linear Model?\nAfter building up a linear model, there are four criteria should be met before proceding the test:\n\nIndependence\nNormality\nVariance homogeneity\nLinearity\n\nRead more information here."
  },
  {
    "objectID": "content/r-topics/correlation-lm.html",
    "href": "content/r-topics/correlation-lm.html",
    "title": "Correlation and Regression",
    "section": "",
    "text": "The relationship between the blood alcohol level of two people and the number of beers they have drunk."
  },
  {
    "objectID": "content/r-topics/correlation-lm.html#about-our-dataset",
    "href": "content/r-topics/correlation-lm.html#about-our-dataset",
    "title": "Correlation and Regression",
    "section": "",
    "text": "The relationship between the blood alcohol level of two people and the number of beers they have drunk."
  },
  {
    "objectID": "content/r-topics/correlation-lm.html#about-correlation-analysis",
    "href": "content/r-topics/correlation-lm.html#about-correlation-analysis",
    "title": "Correlation and Regression",
    "section": "About Correlation analysis",
    "text": "About Correlation analysis\n\nSuitable for two numerical variable.\nRange: \\([-1, 1]\\).\n\npositive: One variable increases as another variable increases.\nnegative: the other way around.\n\nCorrelation is not a model.\n\nIt only tells how a variable behaves when on another variable changes.\nIt can’t make prediction. E.g. in our case, it can’t tell how much blood alcohol a person contains when this person drink 5 beers.\nCorrelation doesn’t imply causation. Sometimes two correlated variables might mean nothing.\n\nSince usually it’s impossible to analyse the population, the realistic correlation analyses are based on samples.\nSince a correlation analysis is based on a sample, we need to make a \\(p\\)-value test to prove that this analysis has statistical significance."
  },
  {
    "objectID": "content/r-topics/correlation-lm.html#prepare-runtime-environment-load-data",
    "href": "content/r-topics/correlation-lm.html#prepare-runtime-environment-load-data",
    "title": "Correlation and Regression",
    "section": "Prepare Runtime Environment & Load Data",
    "text": "Prepare Runtime Environment & Load Data\n\n# (install &) load packages\npacman::p_load(\n  broom,\n  conflicted,\n  modelbased,\n  tidyverse)\n\n# handle function conflicts\nconflicts_prefer(dplyr::filter) \n\n[conflicted] Will prefer dplyr::filter over any other package.\n\nconflicts_prefer(dplyr::select)\n\n[conflicted] Will prefer dplyr::select over any other package.\n\n# load data\npath &lt;- \"https://raw.githubusercontent.com/SchmidtPaul/dsfair_quarto/master/data/DrinksPeterMax.csv\"\ndat &lt;- read_csv(path)\n\nRows: 20 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Person\ndbl (2): drinks, blood_alc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "content/r-topics/correlation-lm.html#make-a-correlation-hypothesis",
    "href": "content/r-topics/correlation-lm.html#make-a-correlation-hypothesis",
    "title": "Correlation and Regression",
    "section": "Make a Correlation Hypothesis",
    "text": "Make a Correlation Hypothesis\n\ncor(dat$drinks, dat$blood_alc)\n\n[1] 0.9559151\n\n\nThe estimation (\\(r\\)) is around \\(0.96\\)."
  },
  {
    "objectID": "content/r-topics/correlation-lm.html#null-hypothesis-significance-testing-p-value",
    "href": "content/r-topics/correlation-lm.html#null-hypothesis-significance-testing-p-value",
    "title": "Correlation and Regression",
    "section": "Null Hypothesis Significance Testing & \\(p\\)-value",
    "text": "Null Hypothesis Significance Testing & \\(p\\)-value\nThere are two important concepts:\n\n\\(r\\): The estimation correlation.\n\\(\\rho\\): The true correlation.\n\nSince we can’t obtain the real correlation value (since it’s impossible to make an experiment on the whole population), we need to test if our estimation is persuasive or not.\nThe definition of \\(p\\)-value from Wikipedia:\n\nIn null-hypothesis significance testing, the \\(p\\)-value is the probability of obtaining test results at least as extreme as the result actually observed, under the assumption that the null hypothesis is correct.\n\nIn correlation anaylysis, given two statistics (In our case: the relationship between people’s blood alcohol content and how many glasses of bear drunk by them), the null hypothesis \\(H_0\\) says the correlation \\(\\rho\\) between these two statistics is \\(0\\).\n\n\n\n\n\n\nNote\n\n\n\nWhen talking about significance, make sure:\n\nwhat data\nwhat hypotheise\n\n\n\n::: {.callout-note Extra information: publication bias title=“Tip with Title” collapse=“true”} In many cases, journals only accept research with a very significant \\(p\\) value. This results in some problems in the research field. See more on this Wikipedia website and this statement. :::\nAfter testing, we are confident that the probability this null hypothesis really happens (\\(p\\)) is lower than \\(0.05\\). Thus we can reject the null hypothesis (i.e. claim that \\(\\rho != 0\\)) and adopt the alternative hypothesis (namely \\(H_A\\) or \\(H_1\\)). In other words, we are certain that there DO exists a correlation between the two statistics.\n\n\n\n\n\n\nImportant\n\n\n\n\\(p &lt; 0.05\\) only tells us that there DO exists a correlation. It neither means the true correlation is equal to our estimation, nor it means that we’ve found an important result."
  },
  {
    "objectID": "content/r-topics/correlation-lm.html#make-a-simple-linear-model",
    "href": "content/r-topics/correlation-lm.html#make-a-simple-linear-model",
    "title": "Correlation and Regression",
    "section": "Make a Simple Linear Model",
    "text": "Make a Simple Linear Model\n\nreg_simple &lt;- lm(formula = blood_alc ~ drinks, data = dat)\nreg_simple\n\n\nCall:\nlm(formula = blood_alc ~ drinks, data = dat)\n\nCoefficients:\n(Intercept)       drinks  \n    0.04896      0.12105  \n\n\nLet a linear regression relationship is written as \\(y = a + bx\\). Here blood_alc is \\(y\\) and drinks is \\(x\\)."
  },
  {
    "objectID": "content/r-topics/correlation-lm.html#test-this-a-simple-linear-model",
    "href": "content/r-topics/correlation-lm.html#test-this-a-simple-linear-model",
    "title": "Correlation and Regression",
    "section": "Test this a Simple Linear Model",
    "text": "Test this a Simple Linear Model\n\ntibble(drinks = seq(0, 9)) %&gt;% \n  estimate_expectation(model = reg_simple) %&gt;% \n  as_tibble()\n\n# A tibble: 10 × 5\n   drinks Predicted     SE  CI_low CI_high\n    &lt;int&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1      0    0.0490 0.0406 -0.0363   0.134\n 2      1    0.170  0.0337  0.0993   0.241\n 3      2    0.291  0.0278  0.233    0.349\n 4      3    0.412  0.0238  0.362    0.462\n 5      4    0.533  0.0226  0.486    0.581\n 6      5    0.654  0.0247  0.602    0.706\n 7      6    0.775  0.0294  0.713    0.837\n 8      7    0.896  0.0357  0.821    0.971\n 9      8    1.02   0.0428  0.927    1.11 \n10      9    1.14   0.0505  1.03     1.24 \n\n\nProblem: the blood alcohol value is \\(0.049\\) and thus larger than \\(0\\). By our common sense this result is wrong.\nWe then get the \\(p\\)-value using broom::tidy(). It produces more concise result compared to the summary() function.\n\ntidy(reg_simple, conf.int = TRUE)\n\n# A tibble: 2 × 7\n  term        estimate std.error statistic  p.value conf.low conf.high\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)   0.0490   0.0406       1.21 2.43e- 1  -0.0363     0.134\n2 drinks        0.121    0.00876     13.8  5.09e-11   0.103      0.139\n\n\nThe \\(p\\)-value is larger than \\(0.05\\), thus this model is not convincing."
  },
  {
    "objectID": "content/r-topics/correlation-lm.html#make-an-improved-linear-model",
    "href": "content/r-topics/correlation-lm.html#make-an-improved-linear-model",
    "title": "Correlation and Regression",
    "section": "Make an Improved Linear Model",
    "text": "Make an Improved Linear Model\nThis time we assume the linear model follows this patter: \\(y = ax\\).\n\nreg_noint &lt;- lm(formula = blood_alc ~ 0 + drinks, data = dat)\nreg_noint\n\n\nCall:\nlm(formula = blood_alc ~ 0 + drinks, data = dat)\n\nCoefficients:\ndrinks  \n0.1298"
  },
  {
    "objectID": "content/r-topics/useful-r-r_studio.html",
    "href": "content/r-topics/useful-r-r_studio.html",
    "title": "Using Things about R and R Studio",
    "section": "",
    "text": "The shortcut for inserting a section\n\n\n\nCTRL + SHIFT + R\n\n\nInside the pop-up window, you can type your desired section heading name This method is preferred because R Studio will automatically fill the rest of the lines with dashes\n\n# Insert a section using shortcut ----------------------------------------- \n\n\n\n\nAt least 4 dashes behind a comment is recognized as an indicator for a section\n\n# Insert a section manually ----"
  },
  {
    "objectID": "content/r-topics/useful-r-r_studio.html#insert-a-section-in-a-r-file",
    "href": "content/r-topics/useful-r-r_studio.html#insert-a-section-in-a-r-file",
    "title": "Using Things about R and R Studio",
    "section": "",
    "text": "The shortcut for inserting a section\n\n\n\nCTRL + SHIFT + R\n\n\nInside the pop-up window, you can type your desired section heading name This method is preferred because R Studio will automatically fill the rest of the lines with dashes\n\n# Insert a section using shortcut ----------------------------------------- \n\n\n\n\nAt least 4 dashes behind a comment is recognized as an indicator for a section\n\n# Insert a section manually ----"
  },
  {
    "objectID": "content/r-topics/useful-r-r_studio.html#r-studio-shortcuts",
    "href": "content/r-topics/useful-r-r_studio.html#r-studio-shortcuts",
    "title": "Using Things about R and R Studio",
    "section": "R Studio Shortcuts",
    "text": "R Studio Shortcuts\n\nR Studio Shortcuts"
  },
  {
    "objectID": "content/r-topics/pipe-operator.html",
    "href": "content/r-topics/pipe-operator.html",
    "title": "Learning R + Quarto",
    "section": "",
    "text": "pacman::p_load(tidyverse)"
  },
  {
    "objectID": "content/r-topics/pipe-operator.html#about-pipe",
    "href": "content/r-topics/pipe-operator.html#about-pipe",
    "title": "Learning R + Quarto",
    "section": "About pipe",
    "text": "About pipe\nHere’s a mini example 1. Create a vector 2. Calculate the square root of this vector 3. Calculate the mean of the square root of the result 4. Calculate the square root of the result\n\nOption 1: Nesting Functions\n\nsqrt(mean(sqrt(c(3, 5, 8))))\n\n[1] 1.505163\n\n\n\nPRO: Not much code\nCON: Hard to read\n\n\n\nOption 2: Intermediate Results\n\nPRO: Easy to read\nCON: A lot of code, unnecessary intermediate results\n\n\na &lt;- c(3, 5, 8)\nb &lt;- sqrt(a)\nc &lt;- mean(b)\nsqrt(c)\n\n[1] 1.505163\n\n\n\n\nOption 3: Pipe Operator\nThese do the same thing:\n\nsqrt(c(3, 5, 8))      # baseR\n\n[1] 1.732051 2.236068 2.828427\n\nc(3, 5, 8) %&gt;% sqrt() # Pipe\n\n[1] 1.732051 2.236068 2.828427\n\n\nThus the final solution by using the pipe operator is:\n\nc(3, 5, 8) %&gt;% sqrt() %&gt;% mean() %&gt;% sqrt()\n\n[1] 1.505163"
  },
  {
    "objectID": "content/r-topics/pipe-operator.html#deal-with-functions-with-additional-arguments",
    "href": "content/r-topics/pipe-operator.html#deal-with-functions-with-additional-arguments",
    "title": "Learning R + Quarto",
    "section": "Deal with functions with additional arguments",
    "text": "Deal with functions with additional arguments\nWhat if I want to pipe my object into an argument of a function that is NOT the first argument? For example:\n\ntbl &lt;- as_tibble(PlantGrowth)\nlm(weight ~ group, data = tbl)\n\n\nCall:\nlm(formula = weight ~ group, data = tbl)\n\nCoefficients:\n(Intercept)    grouptrt1    grouptrt2  \n      5.032       -0.371        0.494  \n\n\nAnswer: Use a dot to say which argument to pipe to.\n\ntbl %&gt;% lm(weight ~ group, data = .)\n\n\nCall:\nlm(formula = weight ~ group, data = .)\n\nCoefficients:\n(Intercept)    grouptrt1    grouptrt2  \n      5.032       -0.371        0.494"
  },
  {
    "objectID": "content/r-topics/pipe-operator.html#but-what-about-this-operator",
    "href": "content/r-topics/pipe-operator.html#but-what-about-this-operator",
    "title": "Learning R + Quarto",
    "section": "But what about this Operator: |>",
    "text": "But what about this Operator: |&gt;\nThere’s minor difference but %&gt;% operator is still bettern than |&gt; operator. Find more information from this tutorial."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My R Language Learning Note",
    "section": "",
    "text": "This project contains my note about the R workshop in University of Rostock in 2024."
  },
  {
    "objectID": "content/r-topics/ggplot2-basic.html",
    "href": "content/r-topics/ggplot2-basic.html",
    "title": "Brief Introduction to tidyverse::ggplot2",
    "section": "",
    "text": "For charts like scatter plots, this gives us a nicer look because points are not located at the edge of the plotting area this way. To know more about this topic, check the following websites.\n\nhttps://schmidtpaul.github.io/dsfair_quarto/ch/summaryarticles/ggplot2intro.html#expand\nhttps://3mw.albert-rapp.de/p/change-axes-expansion"
  },
  {
    "objectID": "content/r-topics/ggplot2-basic.html#expansion",
    "href": "content/r-topics/ggplot2-basic.html#expansion",
    "title": "Brief Introduction to tidyverse::ggplot2",
    "section": "",
    "text": "For charts like scatter plots, this gives us a nicer look because points are not located at the edge of the plotting area this way. To know more about this topic, check the following websites.\n\nhttps://schmidtpaul.github.io/dsfair_quarto/ch/summaryarticles/ggplot2intro.html#expand\nhttps://3mw.albert-rapp.de/p/change-axes-expansion"
  },
  {
    "objectID": "content/r-topics/ggplot2-basic.html#miscellaneous",
    "href": "content/r-topics/ggplot2-basic.html#miscellaneous",
    "title": "Brief Introduction to tidyverse::ggplot2",
    "section": "Miscellaneous",
    "text": "Miscellaneous\n\nDoes the order of the function call matters?\nUsually it doens’t. Only the order of the geom functions (e.g. geom_abline()) may influence the result.\n\n\nHow to add a photo for \\(x\\) tick?\nUse ggtext"
  },
  {
    "objectID": "content/r-topics/ggplot2-basic.html#external-resources",
    "href": "content/r-topics/ggplot2-basic.html#external-resources",
    "title": "Brief Introduction to tidyverse::ggplot2",
    "section": "External resources",
    "text": "External resources\n\nggplot2 official\n[About Facets]https://teunbrand.github.io/ggh4x/articles/Facets.html"
  },
  {
    "objectID": "content/r-topics/package-loading-conflict.html",
    "href": "content/r-topics/package-loading-conflict.html",
    "title": "Package Loading and Conflicting Management",
    "section": "",
    "text": "When using built-in R functions\n\ninstall.packages(packagename) # install package every time, even though the package is already installed\nlibrary(packagename) # If the package is not found, an error will be raised\n\nWhen using pacman::p_load(), it only installs packages when the package is not found on the system. Note here we don’t load the package {pacman}. Instead, we only use the p_load() function directly from this package.\n\npacman::p_load(\"packagename1\", \"packagename2\")"
  },
  {
    "objectID": "content/r-topics/package-loading-conflict.html#loading-packages",
    "href": "content/r-topics/package-loading-conflict.html#loading-packages",
    "title": "Package Loading and Conflicting Management",
    "section": "",
    "text": "When using built-in R functions\n\ninstall.packages(packagename) # install package every time, even though the package is already installed\nlibrary(packagename) # If the package is not found, an error will be raised\n\nWhen using pacman::p_load(), it only installs packages when the package is not found on the system. Note here we don’t load the package {pacman}. Instead, we only use the p_load() function directly from this package.\n\npacman::p_load(\"packagename1\", \"packagename2\")"
  },
  {
    "objectID": "content/r-topics/package-loading-conflict.html#conflict-resolving",
    "href": "content/r-topics/package-loading-conflict.html#conflict-resolving",
    "title": "Package Loading and Conflicting Management",
    "section": "Conflict Resolving",
    "text": "Conflict Resolving\nBy default, R uses the function of the package that was loaded THE LAST. Instead of relying on this built-in mechanism, it’s a good practice to manage package confilicts explicitly.\nE.g. there are two common functions with the same name but come from different packages:\n\ndplyr::filter()\nstats::filter()\n\nWe can use the {conflicted} package to deal with the conflict.\n\n# (install &) load packages\npacman::p_load(\n    conflicted, \n    tidyverse)\n\n# handle function conflicts\nconflicts_prefer(dplyr::filter) \n\n[conflicted] Will prefer dplyr::filter over any other package.\n\n\n\n\n\n\n\n\nExternal resources\n\n\n\n\nhttps://schmidtpaul.github.io/dsfair_quarto/ch/misc/usefulthings.html#conflicted"
  },
  {
    "objectID": "content/r-topics/tidyverse-exercise.html",
    "href": "content/r-topics/tidyverse-exercise.html",
    "title": "Exercise of {tidyverse}",
    "section": "",
    "text": "# (install &) load packages\npacman::p_load(\n    broom,\n    conflicted,\n    modelbased,\n    tidyverse\n)\n\n# handle function conflicts\nconflicts_prefer(dplyr::filter)\nconflicts_prefer(dplyr::select)\n\nWe load the data PlantGrowth as a tibble object.\n\ntbl &lt;- as_tibble(PlantGrowth)\ntbl\n\n# A tibble: 30 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.17 ctrl \n 2   5.58 ctrl \n 3   5.18 ctrl \n 4   6.11 ctrl \n 5   4.5  ctrl \n 6   4.61 ctrl \n 7   5.17 ctrl \n 8   4.53 ctrl \n 9   5.33 ctrl \n10   5.14 ctrl \n# ℹ 20 more rows"
  },
  {
    "objectID": "content/r-topics/tidyverse-exercise.html#prerequisite",
    "href": "content/r-topics/tidyverse-exercise.html#prerequisite",
    "title": "Exercise of {tidyverse}",
    "section": "",
    "text": "# (install &) load packages\npacman::p_load(\n    broom,\n    conflicted,\n    modelbased,\n    tidyverse\n)\n\n# handle function conflicts\nconflicts_prefer(dplyr::filter)\nconflicts_prefer(dplyr::select)\n\nWe load the data PlantGrowth as a tibble object.\n\ntbl &lt;- as_tibble(PlantGrowth)\ntbl\n\n# A tibble: 30 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.17 ctrl \n 2   5.58 ctrl \n 3   5.18 ctrl \n 4   6.11 ctrl \n 5   4.5  ctrl \n 6   4.61 ctrl \n 7   5.17 ctrl \n 8   4.53 ctrl \n 9   5.33 ctrl \n10   5.14 ctrl \n# ℹ 20 more rows"
  },
  {
    "objectID": "content/r-topics/tidyverse-exercise.html#exercise-1",
    "href": "content/r-topics/tidyverse-exercise.html#exercise-1",
    "title": "Exercise of {tidyverse}",
    "section": "Exercise 1",
    "text": "Exercise 1\nUse the original tbl, create a new column “Kg” and assume that the weight columns is in tons that you convert to Kg. Afterwards, delete the weight column. Keep only values smaller than 5000 Kg. Sort the data so that the largest Kg are on top\n\ntbl %&gt;%\n    mutate(Kg = weight * 1000) %&gt;%\n    select(-weight) %&gt;%\n    filter(Kg &lt; 5000) %&gt;%\n    arrange(desc(Kg))\n\n# A tibble: 13 × 2\n   group    Kg\n   &lt;fct&gt; &lt;dbl&gt;\n 1 trt2   4920\n 2 trt1   4890\n 3 trt1   4810\n 4 trt1   4690\n 5 ctrl   4610\n 6 ctrl   4530\n 7 ctrl   4500\n 8 trt1   4410\n 9 trt1   4320\n10 ctrl   4170\n11 trt1   4170\n12 trt1   3830\n13 trt1   3590"
  },
  {
    "objectID": "content/r-topics/tidyverse-exercise.html#exercise-2",
    "href": "content/r-topics/tidyverse-exercise.html#exercise-2",
    "title": "Exercise of {tidyverse}",
    "section": "Exercise 2",
    "text": "Exercise 2\nGiven the data dat:\n\npath &lt;- \"https://raw.githubusercontent.com/SchmidtPaul/dsfair_quarto/master/data/Mead1993.csv\"\ndat &lt;- read_csv(path) # use path from above\n\nRows: 24 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): variety\ndbl (3): yield, row, col\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nFind out the average, minimum and maximum yields per variety using summarise(). Arrage as the highest value on the top.\n\ndat %&gt;%\n    group_by(variety) %&gt;%\n    summarise(\n        avg_yield = mean(yield),\n        min_yield = min(yield),\n        max_yield = max(yield)\n    ) %&gt;%\n    arrange(desc(avg_yield))\n\n# A tibble: 4 × 4\n  variety avg_yield min_yield max_yield\n  &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 v2           37.4      32.0      43.3\n2 v4           29.9      27.6      33.2\n3 v1           20.5      15.9      26.4\n4 v3           19.5      11.4      25.9"
  },
  {
    "objectID": "content/r-topics/tidyverse-basic.html",
    "href": "content/r-topics/tidyverse-basic.html",
    "title": "Brief Introduction to {tidyverse}",
    "section": "",
    "text": "The benefits of using tibble over data.frame are:\n\nIt tells the data type of each column.\nInstead of printing all the data, it only prints a limited numbers of rows and columns, so that the console won’t be flouded by too many text.\nMissing values and negative values are printed in red.\n\n\n\n\n\npacman::p_load(tidyverse)\ntbl &lt;- as_tibble(PlantGrowth)\n\n\n\n\nBy default it prints 10 rows.\n\nprint(tbl) # To 10 rows\n\n# A tibble: 30 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.17 ctrl \n 2   5.58 ctrl \n 3   5.18 ctrl \n 4   6.11 ctrl \n 5   4.5  ctrl \n 6   4.61 ctrl \n 7   5.17 ctrl \n 8   4.53 ctrl \n 9   5.33 ctrl \n10   5.14 ctrl \n# ℹ 20 more rows\n\n\nTo print more rows you can:\n\nprint(tbl, n = 20) # To 20 rows\n\n# A tibble: 30 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.17 ctrl \n 2   5.58 ctrl \n 3   5.18 ctrl \n 4   6.11 ctrl \n 5   4.5  ctrl \n 6   4.61 ctrl \n 7   5.17 ctrl \n 8   4.53 ctrl \n 9   5.33 ctrl \n10   5.14 ctrl \n11   4.81 trt1 \n12   4.17 trt1 \n13   4.41 trt1 \n14   3.59 trt1 \n15   5.87 trt1 \n16   3.83 trt1 \n17   6.03 trt1 \n18   4.89 trt1 \n19   4.32 trt1 \n20   4.69 trt1 \n# ℹ 10 more rows\n\nprint(tbl, n = Inf) # To print all rows\n\n# A tibble: 30 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.17 ctrl \n 2   5.58 ctrl \n 3   5.18 ctrl \n 4   6.11 ctrl \n 5   4.5  ctrl \n 6   4.61 ctrl \n 7   5.17 ctrl \n 8   4.53 ctrl \n 9   5.33 ctrl \n10   5.14 ctrl \n11   4.81 trt1 \n12   4.17 trt1 \n13   4.41 trt1 \n14   3.59 trt1 \n15   5.87 trt1 \n16   3.83 trt1 \n17   6.03 trt1 \n18   4.89 trt1 \n19   4.32 trt1 \n20   4.69 trt1 \n21   6.31 trt2 \n22   5.12 trt2 \n23   5.54 trt2 \n24   5.5  trt2 \n25   5.37 trt2 \n26   5.29 trt2 \n27   4.92 trt2 \n28   6.15 trt2 \n29   5.8  trt2 \n30   5.26 trt2 \n\n\n\n\n\nTo import from a csv file, you can:\n\nread.csv(path_to_csv) # base R import as data.frame\nread_csv(path_to_csv) # load as `tidyverse::tibble` \n\nNote that you can also read data from online\n\nread_csv(\"https://raw.githubusercontent.com/SchmidtPaul/dsfair_quarto/master/data/DrinksPeterMax.csv\")\n\nRows: 20 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Person\ndbl (2): drinks, blood_alc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 20 × 3\n   Person drinks blood_alc\n   &lt;chr&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1 Max         1       0.2\n 2 Max         2       0.3\n 3 Max         3       0.5\n 4 Max         3       0.6\n 5 Max         4       0.6\n 6 Max         4       0.5\n 7 Max         4       0.7\n 8 Max         5       0.6\n 9 Max         7       0.8\n10 Max         8       1  \n11 Peter       1       0.1\n12 Peter       1       0.1\n13 Peter       1       0.2\n14 Peter       1       0.2\n15 Peter       1       0.1\n16 Peter       3       0.3\n17 Peter       5       0.5\n18 Peter       6       0.8\n19 Peter       8       0.9\n20 Peter       9       1.3\n\n\n\n\n\n\ntbl %&gt;% as.data.frame()\n\n   weight group\n1    4.17  ctrl\n2    5.58  ctrl\n3    5.18  ctrl\n4    6.11  ctrl\n5    4.50  ctrl\n6    4.61  ctrl\n7    5.17  ctrl\n8    4.53  ctrl\n9    5.33  ctrl\n10   5.14  ctrl\n11   4.81  trt1\n12   4.17  trt1\n13   4.41  trt1\n14   3.59  trt1\n15   5.87  trt1\n16   3.83  trt1\n17   6.03  trt1\n18   4.89  trt1\n19   4.32  trt1\n20   4.69  trt1\n21   6.31  trt2\n22   5.12  trt2\n23   5.54  trt2\n24   5.50  trt2\n25   5.37  trt2\n26   5.29  trt2\n27   4.92  trt2\n28   6.15  trt2\n29   5.80  trt2\n30   5.26  trt2"
  },
  {
    "objectID": "content/r-topics/tidyverse-basic.html#tibble",
    "href": "content/r-topics/tidyverse-basic.html#tibble",
    "title": "Brief Introduction to {tidyverse}",
    "section": "",
    "text": "The benefits of using tibble over data.frame are:\n\nIt tells the data type of each column.\nInstead of printing all the data, it only prints a limited numbers of rows and columns, so that the console won’t be flouded by too many text.\nMissing values and negative values are printed in red.\n\n\n\n\n\npacman::p_load(tidyverse)\ntbl &lt;- as_tibble(PlantGrowth)\n\n\n\n\nBy default it prints 10 rows.\n\nprint(tbl) # To 10 rows\n\n# A tibble: 30 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.17 ctrl \n 2   5.58 ctrl \n 3   5.18 ctrl \n 4   6.11 ctrl \n 5   4.5  ctrl \n 6   4.61 ctrl \n 7   5.17 ctrl \n 8   4.53 ctrl \n 9   5.33 ctrl \n10   5.14 ctrl \n# ℹ 20 more rows\n\n\nTo print more rows you can:\n\nprint(tbl, n = 20) # To 20 rows\n\n# A tibble: 30 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.17 ctrl \n 2   5.58 ctrl \n 3   5.18 ctrl \n 4   6.11 ctrl \n 5   4.5  ctrl \n 6   4.61 ctrl \n 7   5.17 ctrl \n 8   4.53 ctrl \n 9   5.33 ctrl \n10   5.14 ctrl \n11   4.81 trt1 \n12   4.17 trt1 \n13   4.41 trt1 \n14   3.59 trt1 \n15   5.87 trt1 \n16   3.83 trt1 \n17   6.03 trt1 \n18   4.89 trt1 \n19   4.32 trt1 \n20   4.69 trt1 \n# ℹ 10 more rows\n\nprint(tbl, n = Inf) # To print all rows\n\n# A tibble: 30 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.17 ctrl \n 2   5.58 ctrl \n 3   5.18 ctrl \n 4   6.11 ctrl \n 5   4.5  ctrl \n 6   4.61 ctrl \n 7   5.17 ctrl \n 8   4.53 ctrl \n 9   5.33 ctrl \n10   5.14 ctrl \n11   4.81 trt1 \n12   4.17 trt1 \n13   4.41 trt1 \n14   3.59 trt1 \n15   5.87 trt1 \n16   3.83 trt1 \n17   6.03 trt1 \n18   4.89 trt1 \n19   4.32 trt1 \n20   4.69 trt1 \n21   6.31 trt2 \n22   5.12 trt2 \n23   5.54 trt2 \n24   5.5  trt2 \n25   5.37 trt2 \n26   5.29 trt2 \n27   4.92 trt2 \n28   6.15 trt2 \n29   5.8  trt2 \n30   5.26 trt2 \n\n\n\n\n\nTo import from a csv file, you can:\n\nread.csv(path_to_csv) # base R import as data.frame\nread_csv(path_to_csv) # load as `tidyverse::tibble` \n\nNote that you can also read data from online\n\nread_csv(\"https://raw.githubusercontent.com/SchmidtPaul/dsfair_quarto/master/data/DrinksPeterMax.csv\")\n\nRows: 20 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Person\ndbl (2): drinks, blood_alc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 20 × 3\n   Person drinks blood_alc\n   &lt;chr&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1 Max         1       0.2\n 2 Max         2       0.3\n 3 Max         3       0.5\n 4 Max         3       0.6\n 5 Max         4       0.6\n 6 Max         4       0.5\n 7 Max         4       0.7\n 8 Max         5       0.6\n 9 Max         7       0.8\n10 Max         8       1  \n11 Peter       1       0.1\n12 Peter       1       0.1\n13 Peter       1       0.2\n14 Peter       1       0.2\n15 Peter       1       0.1\n16 Peter       3       0.3\n17 Peter       5       0.5\n18 Peter       6       0.8\n19 Peter       8       0.9\n20 Peter       9       1.3\n\n\n\n\n\n\ntbl %&gt;% as.data.frame()\n\n   weight group\n1    4.17  ctrl\n2    5.58  ctrl\n3    5.18  ctrl\n4    6.11  ctrl\n5    4.50  ctrl\n6    4.61  ctrl\n7    5.17  ctrl\n8    4.53  ctrl\n9    5.33  ctrl\n10   5.14  ctrl\n11   4.81  trt1\n12   4.17  trt1\n13   4.41  trt1\n14   3.59  trt1\n15   5.87  trt1\n16   3.83  trt1\n17   6.03  trt1\n18   4.89  trt1\n19   4.32  trt1\n20   4.69  trt1\n21   6.31  trt2\n22   5.12  trt2\n23   5.54  trt2\n24   5.50  trt2\n25   5.37  trt2\n26   5.29  trt2\n27   4.92  trt2\n28   6.15  trt2\n29   5.80  trt2\n30   5.26  trt2"
  },
  {
    "objectID": "content/r-topics/tidyverse-basic.html#mutate",
    "href": "content/r-topics/tidyverse-basic.html#mutate",
    "title": "Brief Introduction to {tidyverse}",
    "section": "mutate()",
    "text": "mutate()\n\ntbl2 &lt;- head(tbl)\n\nbaseR\n\ntbl2$new &lt;- tbl2$weight + 2\n\nCreate new column\n\ntbl2 &lt;- tbl2 %&gt;% mutate(new = weight + 2)\n\nReplace the value in-place\n\ntbl2 &lt;- tbl2 %&gt;% mutate(weight = weight + 2)\n\nThe backtick: when export to excel, the backtick won’t shown in the excel file.\n\ntbl2 %&gt;%\n    mutate(\n    `Name with space` = \"Hello!\", \n    number10 = 10\n    )\n\n# A tibble: 6 × 5\n  weight group   new `Name with space` number10\n   &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;chr&gt;                &lt;dbl&gt;\n1   6.17 ctrl   6.17 Hello!                  10\n2   7.58 ctrl   7.58 Hello!                  10\n3   7.18 ctrl   7.18 Hello!                  10\n4   8.11 ctrl   8.11 Hello!                  10\n5   6.5  ctrl   6.5  Hello!                  10\n6   6.61 ctrl   6.61 Hello!                  10\n\n\nFor the 3\n\ntbl2 %&gt;%\n  mutate(v1 = 1, v2 = 2, v3 = 3) %&gt;%\n  mutate(\n    across(starts_with(\"v\"), ~ .x + 20))\n\n# A tibble: 6 × 6\n  weight group   new    v1    v2    v3\n   &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1   6.17 ctrl   6.17    21    22    23\n2   7.58 ctrl   7.58    21    22    23\n3   7.18 ctrl   7.18    21    22    23\n4   8.11 ctrl   8.11    21    22    23\n5   6.5  ctrl   6.5     21    22    23\n6   6.61 ctrl   6.61    21    22    23"
  },
  {
    "objectID": "content/r-topics/tidyverse-basic.html#select",
    "href": "content/r-topics/tidyverse-basic.html#select",
    "title": "Brief Introduction to {tidyverse}",
    "section": "select()",
    "text": "select()\n\ntbl3 &lt;- tbl2 %&gt;% \n    mutate(var1 = 1, var2 = 2, var3 = \"text\", var4 = \"word\")\ntbl3\n\n# A tibble: 6 × 7\n  weight group   new  var1  var2 var3  var4 \n   &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1   6.17 ctrl   6.17     1     2 text  word \n2   7.58 ctrl   7.58     1     2 text  word \n3   7.18 ctrl   7.18     1     2 text  word \n4   8.11 ctrl   8.11     1     2 text  word \n5   6.5  ctrl   6.5      1     2 text  word \n6   6.61 ctrl   6.61     1     2 text  word \n\n\n\ntbl3 %&gt;% \n    select(group, var1, var4)\n\n# A tibble: 6 × 3\n  group  var1 var4 \n  &lt;fct&gt; &lt;dbl&gt; &lt;chr&gt;\n1 ctrl      1 word \n2 ctrl      1 word \n3 ctrl      1 word \n4 ctrl      1 word \n5 ctrl      1 word \n6 ctrl      1 word \n\n\n\ntbl3 %&gt;% \n    select(group, var1:var4)\n\n# A tibble: 6 × 5\n  group  var1  var2 var3  var4 \n  &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1 ctrl      1     2 text  word \n2 ctrl      1     2 text  word \n3 ctrl      1     2 text  word \n4 ctrl      1     2 text  word \n5 ctrl      1     2 text  word \n6 ctrl      1     2 text  word \n\n\n\ntbl3 %&gt;% \n    select(-group)\n\n# A tibble: 6 × 6\n  weight   new  var1  var2 var3  var4 \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1   6.17  6.17     1     2 text  word \n2   7.58  7.58     1     2 text  word \n3   7.18  7.18     1     2 text  word \n4   8.11  8.11     1     2 text  word \n5   6.5   6.5      1     2 text  word \n6   6.61  6.61     1     2 text  word \n\n\n\ntbl3 %&gt;% \n    select(where(is.numeric))\n\n# A tibble: 6 × 4\n  weight   new  var1  var2\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1   6.17  6.17     1     2\n2   7.58  7.58     1     2\n3   7.18  7.18     1     2\n4   8.11  8.11     1     2\n5   6.5   6.5      1     2\n6   6.61  6.61     1     2\n\n\nSelect literally everything but move the column var to the front.\n\ntbl3 %&gt;% \n    select(var1, everything())\n\n# A tibble: 6 × 7\n   var1 weight group   new  var2 var3  var4 \n  &lt;dbl&gt;  &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1   6.17 ctrl   6.17     2 text  word \n2     1   7.58 ctrl   7.58     2 text  word \n3     1   7.18 ctrl   7.18     2 text  word \n4     1   8.11 ctrl   8.11     2 text  word \n5     1   6.5  ctrl   6.5      2 text  word \n6     1   6.61 ctrl   6.61     2 text  word"
  },
  {
    "objectID": "content/r-topics/tidyverse-basic.html#filter",
    "href": "content/r-topics/tidyverse-basic.html#filter",
    "title": "Brief Introduction to {tidyverse}",
    "section": "filter()",
    "text": "filter()\n\ntbl %&gt;% \n  filter(weight &gt; 6 & group == \"trt2\")\n\n# A tibble: 2 × 2\n  weight group\n   &lt;dbl&gt; &lt;fct&gt;\n1   6.31 trt2 \n2   6.15 trt2 \n\n\n\ntbl %&gt;% \n  filter(weight &gt; 6 | weight &lt; 4)\n\n# A tibble: 6 × 2\n  weight group\n   &lt;dbl&gt; &lt;fct&gt;\n1   6.11 ctrl \n2   3.59 trt1 \n3   3.83 trt1 \n4   6.03 trt1 \n5   6.31 trt2 \n6   6.15 trt2 \n\n\nNow we want to keep only trt1 and trt2 observations\nOption 1:\n\ntbl %&gt;% \n  filter(group == \"trt1\" | group == \"trt2\")\n\n# A tibble: 20 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.81 trt1 \n 2   4.17 trt1 \n 3   4.41 trt1 \n 4   3.59 trt1 \n 5   5.87 trt1 \n 6   3.83 trt1 \n 7   6.03 trt1 \n 8   4.89 trt1 \n 9   4.32 trt1 \n10   4.69 trt1 \n11   6.31 trt2 \n12   5.12 trt2 \n13   5.54 trt2 \n14   5.5  trt2 \n15   5.37 trt2 \n16   5.29 trt2 \n17   4.92 trt2 \n18   6.15 trt2 \n19   5.8  trt2 \n20   5.26 trt2 \n\n\nOption 2:\n\ntbl %&gt;% \n  filter(group %in% c(\"trt1\", \"trt2\"))\n\n# A tibble: 20 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.81 trt1 \n 2   4.17 trt1 \n 3   4.41 trt1 \n 4   3.59 trt1 \n 5   5.87 trt1 \n 6   3.83 trt1 \n 7   6.03 trt1 \n 8   4.89 trt1 \n 9   4.32 trt1 \n10   4.69 trt1 \n11   6.31 trt2 \n12   5.12 trt2 \n13   5.54 trt2 \n14   5.5  trt2 \n15   5.37 trt2 \n16   5.29 trt2 \n17   4.92 trt2 \n18   6.15 trt2 \n19   5.8  trt2 \n20   5.26 trt2 \n\n\nOption 3:\n\ntbl %&gt;% \n  filter(group != \"ctrl\")\n\n# A tibble: 20 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   4.81 trt1 \n 2   4.17 trt1 \n 3   4.41 trt1 \n 4   3.59 trt1 \n 5   5.87 trt1 \n 6   3.83 trt1 \n 7   6.03 trt1 \n 8   4.89 trt1 \n 9   4.32 trt1 \n10   4.69 trt1 \n11   6.31 trt2 \n12   5.12 trt2 \n13   5.54 trt2 \n14   5.5  trt2 \n15   5.37 trt2 \n16   5.29 trt2 \n17   4.92 trt2 \n18   6.15 trt2 \n19   5.8  trt2 \n20   5.26 trt2 \n\n\n\ntbl %&gt;% \n  filter(weight &gt; mean(weight))\n\n# A tibble: 17 × 2\n   weight group\n    &lt;dbl&gt; &lt;fct&gt;\n 1   5.58 ctrl \n 2   5.18 ctrl \n 3   6.11 ctrl \n 4   5.17 ctrl \n 5   5.33 ctrl \n 6   5.14 ctrl \n 7   5.87 trt1 \n 8   6.03 trt1 \n 9   6.31 trt2 \n10   5.12 trt2 \n11   5.54 trt2 \n12   5.5  trt2 \n13   5.37 trt2 \n14   5.29 trt2 \n15   6.15 trt2 \n16   5.8  trt2 \n17   5.26 trt2"
  },
  {
    "objectID": "content/r-topics/tidyverse-basic.html#arrange",
    "href": "content/r-topics/tidyverse-basic.html#arrange",
    "title": "Brief Introduction to {tidyverse}",
    "section": "arrange()",
    "text": "arrange()\nFirstly we gather the data. Note that we make use of slice(), whose function is to select data of discrete ranges.\n\ntbl4 &lt;- tbl %&gt;%\n  slice(1:3, 11:13, 21:23) \n# this keeps only rows 1,2,3,11,12,13,21,22,23\n\nSort by weight (default: ascending)\n\ntbl4 %&gt;%\n  arrange(weight) \n\n# A tibble: 9 × 2\n  weight group\n   &lt;dbl&gt; &lt;fct&gt;\n1   4.17 ctrl \n2   4.17 trt1 \n3   4.41 trt1 \n4   4.81 trt1 \n5   5.12 trt2 \n6   5.18 ctrl \n7   5.54 trt2 \n8   5.58 ctrl \n9   6.31 trt2 \n\n\nSort by weight, but descending:\n\ntbl4 %&gt;%\n  arrange(desc(weight))\n\n# A tibble: 9 × 2\n  weight group\n   &lt;dbl&gt; &lt;fct&gt;\n1   6.31 trt2 \n2   5.58 ctrl \n3   5.54 trt2 \n4   5.18 ctrl \n5   5.12 trt2 \n6   4.81 trt1 \n7   4.41 trt1 \n8   4.17 ctrl \n9   4.17 trt1 \n\n\nFirslty sort by “group”. Within each “group” we sort by “weight”.\n\ntbl4 %&gt;%\n  arrange(group, weight)\n\n# A tibble: 9 × 2\n  weight group\n   &lt;dbl&gt; &lt;fct&gt;\n1   4.17 ctrl \n2   5.18 ctrl \n3   5.58 ctrl \n4   4.17 trt1 \n5   4.41 trt1 \n6   4.81 trt1 \n7   5.12 trt2 \n8   5.54 trt2 \n9   6.31 trt2 \n\n\nCustom order (e.g. sort not alphabetically):\n\nmyorder &lt;- c(\"trt1\", \"ctrl\", \"trt2\")\n\ntbl4 %&gt;% \n  arrange(\n    match(group, myorder), \n    weight\n  )\n\n# A tibble: 9 × 2\n  weight group\n   &lt;dbl&gt; &lt;fct&gt;\n1   4.17 trt1 \n2   4.41 trt1 \n3   4.81 trt1 \n4   4.17 ctrl \n5   5.18 ctrl \n6   5.58 ctrl \n7   5.12 trt2 \n8   5.54 trt2 \n9   6.31 trt2"
  },
  {
    "objectID": "content/r-topics/tidyverse-basic.html#summarise",
    "href": "content/r-topics/tidyverse-basic.html#summarise",
    "title": "Brief Introduction to {tidyverse}",
    "section": "summarise()",
    "text": "summarise()\n\ntbl %&gt;% \n  # no group_by \n  summarise(my_mean = mean(weight))\n\n# A tibble: 1 × 1\n  my_mean\n    &lt;dbl&gt;\n1    5.07\n\n\nBut why not use the built-in mean() function? (i.e. in this case mean(tbl$weight)).\nBut summary() shines when combining with other functions. E.g. we can get the mean of each control groups:\n\ntbl %&gt;% \n  group_by(group) %&gt;% \n  summarise(my_mean = mean(weight))\n\n# A tibble: 3 × 2\n  group my_mean\n  &lt;fct&gt;   &lt;dbl&gt;\n1 ctrl     5.03\n2 trt1     4.66\n3 trt2     5.53\n\n\nWe can also elaborate by combining with multiple functions:\n\ntbl %&gt;% \n  group_by(group) %&gt;% \n  summarise(\n    Mean = mean(weight),\n    StdDev = sd(weight),\n    Min = min(weight),\n    Median = median(weight),\n    Max = max(weight),\n    n_Obs = n(),\n  )\n\n# A tibble: 3 × 7\n  group  Mean StdDev   Min Median   Max n_Obs\n  &lt;fct&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1 ctrl   5.03  0.583  4.17   5.15  6.11    10\n2 trt1   4.66  0.794  3.59   4.55  6.03    10\n3 trt2   5.53  0.443  4.92   5.44  6.31    10\n\n\nWe can even group by more than one groups\n\ntbl %&gt;% \n  mutate(larger5 = case_when(\n    weight &gt; 5 ~ \"yes\",\n    weight &lt; 5 ~ \"no\"\n  )) %&gt;% \n  group_by(group, larger5) %&gt;% \n  summarise(\n    n_Obs = n(),\n    Mean = mean(weight)\n  )\n\n`summarise()` has grouped output by 'group'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 6 × 4\n# Groups:   group [3]\n  group larger5 n_Obs  Mean\n  &lt;fct&gt; &lt;chr&gt;   &lt;int&gt; &lt;dbl&gt;\n1 ctrl  no          4  4.45\n2 ctrl  yes         6  5.42\n3 trt1  no          8  4.34\n4 trt1  yes         2  5.95\n5 trt2  no          1  4.92\n6 trt2  yes         9  5.59"
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html",
    "title": "One Way RCBD Analysis",
    "section": "",
    "text": "# (install &) load packages\npacman::p_load(\n  conflicted,\n  desplot,\n  emmeans,\n  ggtext,\n  multcomp,\n  multcompView,\n  tidyverse)\n\n# handle function conflicts\nconflicts_prefer(dplyr::filter) \nconflicts_prefer(dplyr::select)\n\n# load data\npath &lt;- \"https://raw.githubusercontent.com/SchmidtPaul/dsfair_quarto/master/data/Clewer&Scarisbrick2001.csv\"\ndat &lt;- read_csv(path)\nthe columns block and cultivar should be encoded as factors\n# the columns block and cultivar should be encoded as factors\ndat &lt;- dat %&gt;%\n  mutate(across(c(block, cultivar), ~ as.factor(.x)))\ndat\n\n# A tibble: 12 × 5\n   block cultivar yield   row   col\n   &lt;fct&gt; &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 B1    C1         7.4     2     1\n 2 B1    C2         9.8     3     1\n 3 B1    C3         7.3     1     1\n 4 B1    C4         9.5     4     1\n 5 B2    C1         6.5     1     2\n 6 B2    C2         6.8     4     2\n 7 B2    C3         6.1     3     2\n 8 B2    C4         8       2     2\n 9 B3    C1         5.6     2     3\n10 B3    C2         6.2     1     3\n11 B3    C3         6.4     3     3\n12 B3    C4         7.4     4     3"
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#mini-exercise",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#mini-exercise",
    "title": "One Way RCBD Analysis",
    "section": "Mini exercise",
    "text": "Mini exercise\nGet mean yeild per calt and sourt best caul to top\n\ndat %&gt;%\n  group_by(cultivar) %&gt;%\n  summarise(mean_yield = mean(yield)) %&gt;%\n  arrange(desc(mean_yield))\n\n# A tibble: 4 × 2\n  cultivar mean_yield\n  &lt;fct&gt;         &lt;dbl&gt;\n1 C4              8.3\n2 C2              7.6\n3 C3              6.6\n4 C1              6.5"
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#using-dlookrdescribe",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#using-dlookrdescribe",
    "title": "One Way RCBD Analysis",
    "section": "Using dlookr::describe()",
    "text": "Using dlookr::describe()\ndlookr::describe() is more useful than summarise.\n\n\n\n\n\n\nImportant\n\n\n\nDon’t load dlookr, instead only call the function dlookr::describe(). Otherwise it will affect font size of ggplot. More info on this tutorial.\n\n\n\nAbout Percentile\n\ndat %&gt;% \n  group_by(cultivar) %&gt;% \n  dlookr::describe(yield)\n\nRegistered S3 methods overwritten by 'dlookr':\n  method          from  \n  plot.transform  scales\n  print.transform scales\n\n\n# A tibble: 4 × 27\n  described_variables cultivar     n    na  mean    sd se_mean   IQR skewness\n  &lt;chr&gt;               &lt;fct&gt;    &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n1 yield               C1           3     0   6.5 0.9     0.520 0.9       0   \n2 yield               C2           3     0   7.6 1.93    1.11  1.8       1.55\n3 yield               C3           3     0   6.6 0.624   0.361 0.600     1.29\n4 yield               C4           3     0   8.3 1.08    0.624 1.05      1.15\n# ℹ 18 more variables: kurtosis &lt;dbl&gt;, p00 &lt;dbl&gt;, p01 &lt;dbl&gt;, p05 &lt;dbl&gt;,\n#   p10 &lt;dbl&gt;, p20 &lt;dbl&gt;, p25 &lt;dbl&gt;, p30 &lt;dbl&gt;, p40 &lt;dbl&gt;, p50 &lt;dbl&gt;,\n#   p60 &lt;dbl&gt;, p70 &lt;dbl&gt;, p75 &lt;dbl&gt;, p80 &lt;dbl&gt;, p90 &lt;dbl&gt;, p95 &lt;dbl&gt;,\n#   p99 &lt;dbl&gt;, p100 &lt;dbl&gt;\n\n\np00 … percentile e.g. p01 &lt;dbl&gt;: 1% of value smaller than &lt;dbl&gt;. p50 is the min. p50 is the mediam. p100 is the max.\n\n\nMore Application using dlookr::describe()\nWe can also get can summarize per block and per cultivar.\n\ndat %&gt;% \n  group_by(cultivar) %&gt;% \n  dlookr::describe(yield) %&gt;% \n  select(cultivar:sd, p00, p50, p100) %&gt;% \n  arrange(desc(mean))\n\n# A tibble: 4 × 8\n  cultivar     n    na  mean    sd   p00   p50  p100\n  &lt;fct&gt;    &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 C4           3     0   8.3 1.08    7.4   8     9.5\n2 C2           3     0   7.6 1.93    6.2   6.8   9.8\n3 C3           3     0   6.6 0.624   6.1   6.4   7.3\n4 C1           3     0   6.5 0.9     5.6   6.5   7.4"
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#extract-values-and-save-as-a-vector",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#extract-values-and-save-as-a-vector",
    "title": "One Way RCBD Analysis",
    "section": "Extract Values and Save as a Vector",
    "text": "Extract Values and Save as a Vector\nIt’s possible to extract certain values (e.g. here the means per cultivar) from a tibble and save it into a vector.\n\n# extract mean values from tibble into a vector\nmymeans &lt;- dat %&gt;% \n  group_by(cultivar) %&gt;% \n  summarise(mean_yield = mean(yield)) %&gt;% \n  ungroup()\n\nmymeans\n\n# A tibble: 4 × 2\n  cultivar mean_yield\n  &lt;fct&gt;         &lt;dbl&gt;\n1 C1              6.5\n2 C2              7.6\n3 C3              6.6\n4 C4              8.3\n\n# option 1: with $ just like in baseR\nmymeans$mean_yield\n\n[1] 6.5 7.6 6.6 8.3\n\n# option 2: with pull() from dplyr\nmymeans %&gt;% pull(mean_yield)\n\n[1] 6.5 7.6 6.6 8.3"
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#plot-the-data",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#plot-the-data",
    "title": "One Way RCBD Analysis",
    "section": "Plot the Data",
    "text": "Plot the Data\n\nggplot(data = dat) +\n  aes(y = yield, x = cultivar, color = block) +\n  geom_point() +\n    scale_x_discrete(\n    name = \"Cultivar\"\n  ) +\n  scale_y_continuous(\n    name = \"Yield\",\n    limits = c(0, NA),\n    expand = expansion(mult = c(0, 0.1))\n  ) +\n  scale_color_discrete(\n    name = \"Block\"\n  ) +\n  theme_classic()\n\n\n\n\n\n\n\n\nFrom the plot we know that no matter under which circumstance, field 1 yields the best result."
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#linear-model",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#linear-model",
    "title": "One Way RCBD Analysis",
    "section": "Linear Model",
    "text": "Linear Model\n\nmod &lt;- lm(yield ~ cultivar + block, data = dat)\nmod\n\n\nCall:\nlm(formula = yield ~ cultivar + block, data = dat)\n\nCoefficients:\n(Intercept)   cultivarC2   cultivarC3   cultivarC4      blockB2      blockB3  \n       7.75         1.10         0.10         1.80        -1.65        -2.10  \n\n\nThe formula of the yield is:\n\\[\nyield = Int + cultivar_i + block_j\n\\]\nwhere \\(cultivar_i\\) is the treatment coefficient (in our case, the effect of using different cultivars), \\(block_j\\) is the block coefficient. The intercept (\\(Int\\)) corresponds to the baseline, i.e. the yield of using C1 and on block 1. The result of using different treatment on different blocks can be summarized as following:\n\nPred C1 in B1: \\(7.75 + 0    + 0     = 7.75\\)\nPred C1 in B2: \\(7.75 + 0    + -1.65 = 6.10\\)\nPred C1 in B3: \\(7.75 + 0    + -2.10 = 5.65\\)\n…\nPred C4 in B1: \\(7.75 + 1.80 + 0     = 9.55\\)\nPred C4 in B2: \\(7.75 + 1.80 + -1.65 = 7.90\\)\nPred C4 in B3: \\(7.75 + 1.80 + -2.10 = 7.45\\)"
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#anova",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#anova",
    "title": "One Way RCBD Analysis",
    "section": "ANOVA",
    "text": "ANOVA\n\nANOVA &lt;- anova(mod)\nANOVA\n\nAnalysis of Variance Table\n\nResponse: yield\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \ncultivar   3   6.63    2.21   5.525 0.036730 * \nblock      2   9.78    4.89  12.225 0.007651 **\nResiduals  6   2.40    0.40                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#em-means",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#em-means",
    "title": "One Way RCBD Analysis",
    "section": "EM Means",
    "text": "EM Means\nInstead of the effect of different blocks, people only interested in which cultivar is the most effective. Thus we need to evaluate the mean yield of each cultivar.\nManual calculation of emmeans for cultivars:\n\nemmean C1: \\(7.75 + 0    + mean(c(0, -1.65, -2.10)) = 6.5\\)\nemmean C2: \\(7.75 + 1.10 + mean(c(0, -1.65, -2.10)) = 7.6\\)\nemmean C3: \\(7.75 + 0.10 + mean(c(0, -1.65, -2.10)) = 6.6\\)\nemmean C4: \\(7.75 + 1.80 + mean(c(0, -1.65, -2.10)) = 8.3\\)\n\nNote that these values are identical to the simple mean (mymeans variables). But emmean is still preferred, especially when there’s missing data and when mixed models are used. In those cases, emmean and simple mean won’t be identical.\n\nmean_comp &lt;- mod %&gt;% \n  emmeans(specs = ~ cultivar) %&gt;% # adj. mean per cultivar\n  cld(adjust = \"none\", Letters = letters) # compact letter display (CLD)\n\nmean_comp\n\n cultivar emmean    SE df lower.CL upper.CL .group\n C1          6.5 0.365  6     5.61     7.39  a    \n C3          6.6 0.365  6     5.71     7.49  a    \n C2          7.6 0.365  6     6.71     8.49  ab   \n C4          8.3 0.365  6     7.41     9.19   b   \n\nResults are averaged over the levels of: block \nConfidence level used: 0.95 \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same."
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#plot-the-result",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#plot-the-result",
    "title": "One Way RCBD Analysis",
    "section": "Plot the Result",
    "text": "Plot the Result\n\n\nCode\nmy_caption &lt;- \"Black dots represent raw data. Red dots and error bars represent adjusted means with 95% confidence limits per cultivar. Means followed by a common letter are not significantly different according to the t-test.\"\n\nggplot() +\n  aes(x = cultivar) +\n  # black dots representing the raw data\n  geom_point(\n    data = dat,\n    aes(y = yield)\n  ) +\n  # red dots representing the adjusted means\n  geom_point(\n    data = mean_comp,\n    aes(y = emmean),\n    color = \"red\",\n    position = position_nudge(x = 0.1)\n  ) +\n  # red error bars representing the confidence limits of the adjusted means\n  geom_errorbar(\n    data = mean_comp,\n    aes(ymin = lower.CL, ymax = upper.CL),\n    color = \"red\",\n    width = 0.1,\n    position = position_nudge(x = 0.1)\n  ) +\n  # red letters \n  geom_text(\n    data = mean_comp,\n    aes(y = emmean, label = str_trim(.group)),\n    color = \"red\",\n    position = position_nudge(x = 0.2),\n    hjust = 0\n  ) +\n  scale_x_discrete(\n    name = \"Cultivar\"\n  ) +\n  scale_y_continuous(\n    name = \"Yield\",\n    limits = c(0, NA),\n    expand = expansion(mult = c(0, 0.1))\n  ) +\n  scale_color_discrete(\n    name = \"Block\"\n  ) +\n  theme_classic() +\n  labs(caption = my_caption) +\n  theme(plot.caption = element_textbox_simple(margin = margin(t = 5)),\n        plot.caption.position = \"plot\")\n\n\n\n\n\n\n\n\n\nYou use a split-plot design, when one factor is harder to randomize than the other. You first create main plots (=blocks inside your blocks) with respect to the harder-to-randomize factor."
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#what-will-happen-when-we-dont-consider-the-block-effect",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#what-will-happen-when-we-dont-consider-the-block-effect",
    "title": "One Way RCBD Analysis",
    "section": "What will happen when we don’t consider the Block Effect",
    "text": "What will happen when we don’t consider the Block Effect\nWe build a linear model using solely the cultivar:\n\nmod_no_block &lt;- lm(yield ~ cultivar, data = dat)\n\nmean_comp_no_block &lt;- mod_no_block %&gt;% \n  emmeans(specs = ~ cultivar) %&gt;% # adj. mean per cultivar\n  cld(adjust = \"none\", Letters = letters) # compact letter display (CLD)\n\n\n\nCode\nmy_caption &lt;- \"Black dots represent raw data. Red dots and error bars represent adjusted means with 95% confidence limits per cultivar. Means followed by a common letter are not significantly different according to the t-test.\"\n\nggplot() +\n  aes(x = cultivar) +\n  # black dots representing the raw data\n  geom_point(\n    data = dat,\n    aes(y = yield)\n  ) +\n  # red dots representing the adjusted means\n  geom_point(\n    data = mean_comp_no_block,\n    aes(y = emmean),\n    color = \"red\",\n    position = position_nudge(x = 0.1)\n  ) +\n  # red error bars representing the confidence limits of the adjusted means\n  geom_errorbar(\n    data = mean_comp_no_block,\n    aes(ymin = lower.CL, ymax = upper.CL),\n    color = \"red\",\n    width = 0.1,\n    position = position_nudge(x = 0.1)\n  ) +\n  # red letters \n  geom_text(\n    data = mean_comp_no_block,\n    aes(y = emmean, label = str_trim(.group)),\n    color = \"red\",\n    position = position_nudge(x = 0.2),\n    hjust = 0\n  ) +\n  scale_x_discrete(\n    name = \"Cultivar\"\n  ) +\n  scale_y_continuous(\n    name = \"Yield\",\n    limits = c(0, NA),\n    expand = expansion(mult = c(0, 0.1))\n  ) +\n  scale_color_discrete(\n    name = \"Block\"\n  ) +\n  theme_classic() +\n  labs(caption = my_caption) +\n  theme(plot.caption = element_textbox_simple(margin = margin(t = 5)),\n        plot.caption.position = \"plot\")\n\n\n\n\n\n\n\n\n\nThis time the standard deviations of each cultivar become bigger. In addition, the letter are always “a”, meaning that t-test failed to find the statistic significance. The reason is that the model doesn’t know about the blocks and thinks some of the data (e.g. the highest point of C2) are noise."
  },
  {
    "objectID": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#qa",
    "href": "content/experiment-designs/rcbd_clewerscarisbrick2001.html#qa",
    "title": "One Way RCBD Analysis",
    "section": "Q&A",
    "text": "Q&A\n\nIs ANOVA in RCBD two-way ANOVA?\nIt depends on whom you ask. I think no. Because the definition of a two-way ANOVA is having two treatments. In this example there’s only one treatment, i.e. “cultivar”. The variable “block” is not what we really interested in.\n\n\nIs RCBD the same as a nested ANOVA?\nIt’s not necessary true.\n\nCross effect: \\(A \\ \\& \\ B: A + B + A:B\\)\nNested effect: \\(B \\ in \\ A: A +     A:B\\)\n\nIn this case both cross effect and nested effect are not discussed."
  },
  {
    "objectID": "content/experiment-designs/crd_mead1993.html",
    "href": "content/experiment-designs/crd_mead1993.html",
    "title": "One Way CRD Analysis",
    "section": "",
    "text": "# (install &) load packages\npacman::p_load(\n  broom,\n  conflicted,\n  modelbased,\n  tidyverse)\n\n# handle function conflicts\nconflicts_prefer(dplyr::filter) \nconflicts_prefer(dplyr::select)\n\n# load data and change variable into the correct data type\npath &lt;- \"https://raw.githubusercontent.com/SchmidtPaul/dsfair_quarto/master/data/Mead1993.csv\"\ndat &lt;- read_csv(path) %&gt;% \n  mutate(variety = as.factor(variety))"
  },
  {
    "objectID": "content/experiment-designs/crd_mead1993.html#load-data-packages",
    "href": "content/experiment-designs/crd_mead1993.html#load-data-packages",
    "title": "One Way CRD Analysis",
    "section": "",
    "text": "# (install &) load packages\npacman::p_load(\n  broom,\n  conflicted,\n  modelbased,\n  tidyverse)\n\n# handle function conflicts\nconflicts_prefer(dplyr::filter) \nconflicts_prefer(dplyr::select)\n\n# load data and change variable into the correct data type\npath &lt;- \"https://raw.githubusercontent.com/SchmidtPaul/dsfair_quarto/master/data/Mead1993.csv\"\ndat &lt;- read_csv(path) %&gt;% \n  mutate(variety = as.factor(variety))"
  },
  {
    "objectID": "content/experiment-designs/crd_mead1993.html#inspect-the-data",
    "href": "content/experiment-designs/crd_mead1993.html#inspect-the-data",
    "title": "One Way CRD Analysis",
    "section": "Inspect the data",
    "text": "Inspect the data\n\ndat %&gt;% \n  group_by(variety) %&gt;% \n  dlookr::describe(yield) %&gt;% \n  select(2:sd, p00, p100) %&gt;%\n  arrange(desc(mean))\n\nRegistered S3 methods overwritten by 'dlookr':\n  method          from  \n  plot.transform  scales\n  print.transform scales\n\n\n# A tibble: 4 × 7\n  variety     n    na  mean    sd   p00  p100\n  &lt;fct&gt;   &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 v2          6     0  37.4  3.95  32.0  43.3\n2 v4          6     0  29.9  2.23  27.6  33.2\n3 v1          6     0  20.5  4.69  15.9  26.4\n4 v3          6     0  19.5  5.56  11.4  25.9\n\n\nIn the data, only “yield” is true numerial. “variety” is a factor and has 4 levels.\nBelow is the plot of the data.\n\nggplot(data = dat) +\n  aes(y = yield, x = variety) +\n  geom_point() + \n  # ggtitle(\"Hello Test\") +  # this a short cut function\n  labs(\n    title = \"my title\", \n    subtitle = \"mysubtitile\", \n    caption = \"and caption\"\n  ) + \n  # theme(\n  #   axis.line.x = element_line(color = \"green\", linetype = \"dotted\")\n  # )\n  theme_classic() + \n  scale_y_continuous(\n    name = \"Yield [Kg/ha]\", \n    limits = c(0, NA), # y-axis starts at 0 and ends at ggplot-default, i.e. the highest point.\n    \n    # fixed value is possible\n    # expand = c(0, 0), \n\n    expand = expansion(mult = c(0, 0.1)), # but defined dynamically is better\n  )"
  },
  {
    "objectID": "content/experiment-designs/crd_mead1993.html#modelling",
    "href": "content/experiment-designs/crd_mead1993.html#modelling",
    "title": "One Way CRD Analysis",
    "section": "Modelling",
    "text": "Modelling\n\nmod &lt;- lm(yield ~ variety, data = dat)\nmod\n\n\nCall:\nlm(formula = yield ~ variety, data = dat)\n\nCoefficients:\n(Intercept)    varietyv2    varietyv3    varietyv4  \n    20.4900      16.9133      -0.9983       9.4067  \n\n\nSince “variety” is a factor, instead of one single slope, we’ve got one estimate for the effect brought by each level. Here’s the interpretation of the coefficient of our lm model:\n\nIntercept – the baseline, which shows the yield of planting solely melon of variety 1 is \\(20.49\\) kg/ha.\nThe rest of the value – the individual deviation for each further variety\n\nA summary of prediction based on the model:\n\npred of var 1: \\(20.49 + 0 = 20.49\\) kg/ha\npred of var 2: \\(20.49 + 16.9133 = 37.40\\) kg/ha\npred of var 3: \\(20.49 - 0.9983 = 19.49\\) kg/ha\npred of var 4: \\(20.49 + 9.4067 = 29.89\\) kg/ha"
  },
  {
    "objectID": "content/experiment-designs/crd_mead1993.html#avova-f-test",
    "href": "content/experiment-designs/crd_mead1993.html#avova-f-test",
    "title": "One Way CRD Analysis",
    "section": "AVOVA (F-test)",
    "text": "AVOVA (F-test)\nNull hypothesis H_0: no matter if var 1, var 2, var 3 or var 4 is chosen, the yield stays the same. Alternative hypothesis H_A: at least one of them makes difference.\n\nanova(mod)\n\nAnalysis of Variance Table\n\nResponse: yield\n          Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nvariety    3 1291.48  430.49  23.418 9.439e-07 ***\nResiduals 20  367.65   18.38                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSince \\(p &lt; 0.001\\), we believe it’s extreme unlikely to find a sample that support the null hypothesis. Thus we believe in with the alternative hypothesis instead, i.e. our lm model has statistic significance."
  }
]